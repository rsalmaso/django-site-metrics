==============
django-request
==============

.. include:: long_description.txt

First steps
-----------

    * :ref:`Installation <install>`
    * :ref:`Settings <settings>`
    * :ref:`Template tags <templatetags>`

Quick start guide
=================

.. note::

    To find the request overview page, please click on Requests inside the admin, then "Overview" on the top right, next to "add".

Once you have installed ``django-request`` you can add it to a django project by following these steps;
    
	#. Install the blog app by adding ``'request'`` to ``INSTALLED_APPS``.
	
	#. Run ``manage.py syncdb`` so that Django will create the database tables.
	
	#. Add ``request.middleware.RequestMiddleware`` to ``MIDDLEWARE_CLASSES``. If you use django.contrib.auth, place RequestMiddleware after it. If you use django.contrib.flatpages place ``request.middleware.RequestMiddleware`` before it else flatpages will be marked as error pages in the admin panel.
	
	#. Make sure that the domain name in django.contrib.sites admin is correct. This is used to calculate unique visitors and top referrers.

django-admin.py
===============

purgerequests
-------------

This command can be used to purge old requests, it takes two arguments amount and duration. Example:

.. code-block:: bash

    $ python manage.py purgerequests 1 month
    $ python manage.py purgerequests 2 weeks

It also has a option called ``--noinput``, if this is supplied, it will not ask you to confirm. With this option you can use this command in a cron.

Valid durations: ``hour(s)``, ``day(s)``, ``week(s)``, ``month(s)``, ``year(s)``
